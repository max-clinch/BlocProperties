"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.prepareUpgrade = void 0;
const upgrades_core_1 = require("@openzeppelin/upgrades-core");
const utils_1 = require("./utils");
async function prepareUpgrade(referenceAddressOrContract, Contract, opts = {}) {
    const referenceAddress = (0, utils_1.getContractAddress)(referenceAddressOrContract);
    const { deployer } = (0, utils_1.withDefaults)(opts);
    const provider = (0, utils_1.wrapProvider)(deployer.provider);
    let deployedImpl;
    if (await (0, upgrades_core_1.isTransparentOrUUPSProxy)(provider, referenceAddress)) {
        deployedImpl = await (0, utils_1.deployProxyImpl)(Contract, opts, referenceAddress);
    }
    else if (await (0, upgrades_core_1.isBeaconProxy)(provider, referenceAddress)) {
        const beaconAddress = await (0, upgrades_core_1.getBeaconAddress)(provider, referenceAddress);
        deployedImpl = await (0, utils_1.deployBeaconImpl)(Contract, opts, beaconAddress);
    }
    else if (await (0, upgrades_core_1.isBeacon)(provider, referenceAddress)) {
        deployedImpl = await (0, utils_1.deployBeaconImpl)(Contract, opts, referenceAddress);
    }
    else {
        if (opts.kind === undefined) {
            throw new upgrades_core_1.PrepareUpgradeRequiresKindError();
        }
        deployedImpl = await (0, utils_1.deployUpgradeableImpl)(Contract, opts, referenceAddress);
    }
    return deployedImpl.impl;
}
exports.prepareUpgrade = prepareUpgrade;
//# sourceMappingURL=prepare-upgrade.js.map